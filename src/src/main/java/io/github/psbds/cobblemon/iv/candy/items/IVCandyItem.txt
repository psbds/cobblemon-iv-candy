package io.github.psbds.cobblemon.iv.candy.items;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import com.cobblemon.mod.common.Cobblemon;
import com.cobblemon.mod.common.api.pokemon.stats.Stat;
import com.cobblemon.mod.common.api.pokemon.stats.Stats;
import com.cobblemon.mod.common.entity.pokemon.PokemonEntity;
import com.cobblemon.mod.common.pokemon.Pokemon;

import io.github.psbds.cobblemon.iv.candy.components.IVCandyData;
import io.github.psbds.cobblemon.iv.candy.components.ModDataComponents;
import io.github.psbds.cobblemon.iv.candy.helpers.CobblemonSpeciesHelper;
import net.minecraft.network.chat.Component;
import net.minecraft.world.InteractionHand;
import net.minecraft.world.InteractionResult;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.ItemStack;

public class IVCandyItem extends Item {

    public IVCandyItem(Properties properties) {
        super(properties);
    }

    @Override
    public InteractionResult interactLivingEntity(ItemStack stack, Player player, LivingEntity entity,
            InteractionHand hand) {
        // Check if the entity is a Pokémon
        if (entity instanceof PokemonEntity pokemonEntity) {
            Pokemon pokemon = pokemonEntity.getPokemon();

            if (!player.level().isClientSide) {
                // Server-side logic
                var baseSpecies = CobblemonSpeciesHelper.getFirstEvolution(pokemon.getSpecies());

                IVCandyData candyData = stack.get(ModDataComponents.IV_CANDY_DATA);

                if (candyData.speciesPokedexId() != baseSpecies.getNationalPokedexNumber()) {
                    player.sendSystemMessage(
                            Component.literal("This IV Candy is not compatible with " + baseSpecies.getName() + "!"));
                    return InteractionResult.FAIL;
                }
                player.sendSystemMessage(
                        Component.literal("You used IV Candy on " + pokemon.getDisplayName().getString() + "!"));

                // Get the stat to modify
                Stat targetStat = getRandomStat(pokemon);
                if (targetStat == null) {
                    player.sendSystemMessage(Component.literal("All stats are already maxed out!"));
                    return InteractionResult.FAIL;
                }
                
                int currentIV = pokemon.getIvs().get(targetStat);
                int increaseAmount = 1;

                pokemon.getIvs().set(targetStat, currentIV + increaseAmount);
                player.sendSystemMessage(
                        Component.literal(targetStat + " IV increased to " + (currentIV + increaseAmount) + "!"));

                // Consume the item if not in creative mode
                if (!player.getAbilities().instabuild) {
                    stack.shrink(1);
                }

                return InteractionResult.SUCCESS;
            }

            return InteractionResult.SUCCESS;
        }

        // Not a Pokémon, do nothing
        return InteractionResult.PASS;
    }

    private Stat getRandomStat(Pokemon pokemon) {
        var random = new Random();
        Stat[] stats = { Stats.HP, Stats.ATTACK, Stats.DEFENCE, Stats.SPECIAL_ATTACK, Stats.SPECIAL_DEFENCE,
                Stats.SPEED };

        // Collect stats that are not maxed out
        List<Stat> availableStats = new ArrayList<>();
        for (Stat stat : stats) {
            if (pokemon.getIvs().get(stat) < 31) {
                availableStats.add(stat);
            }
        }

        if (availableStats.isEmpty()) {
            return null;
        }

        int idx = random.nextInt(availableStats.size());
        return availableStats.get(idx);
    }
}
